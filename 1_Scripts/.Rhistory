dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUAD_DEG_sample <- TCGA_LUAD_DEG %>%
sample_n(TCGA_LUAD_DEG_ngenes) %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
GSE7895_persistent_DEGs_sample <- GSE7895_persistent_DEGs %>%
sample_n(GSE7895_persistent_DEGs_ngenes)
TCGA_LUAD_DMG_sample <- TCGA_LUAD_DMG %>%
sample_n(TCGA_LUAD_DMG_ngenes)%>%
filter(abs(log2FC)>log2FC_cutoff_TM) %>%
filter(FDR < FDR_cutoff_TM) %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
# Check the random overlaps between A1, TE with the sign filter
A1_TE_merged_DEGs_sample <- GSE63127_CS_NS_sample %>%
inner_join(., TCGA_LUAD_DEG_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
A1_TE_A2_TM_sampling_table[row,1] <- nrow(A1_TE_merged_DEGs_sample)
# Check the random overlaps with A2 with the sign filter
A1_TE_A2_genes_sample <- A1_TE_merged_DEGs_sample %>%
inner_join(., GSE7895_persistent_DEGs_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
A1_TE_A2_TM_sampling_table[row,2] <- nrow(A1_TE_A2_genes_sample)
# Check the random overlaps with TM with the sign filter
A1_TE_A2_TM_genes_sample <- A1_TE_A2_genes_sample %>%
dplyr::inner_join(., TCGA_LUAD_DMG_sample, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
A1_TE_A2_TM_sampling_table[row,3] <- nrow(A1_TE_A2_TM_genes_sample)
}
library(dplyr)
# Set the number of rows you want to sample
GSE63127_CS_NS_ngenes <- nrow(GSE63127_CS_NS_cutoff)
TCGA_LUAD_DEG_ngenes <- nrow(TCGA_LUAD_DEG_cutoff)
GSE7895_persistent_DEGs_ngenes <- nrow(GSE7895_persistent_DEGs) # no cutoff was applied here
TCGA_LUAD_DMG_ngenes <- nrow(TCGA_LUAD_DMG_cutoff)
# Make a dataframe to contain the results
A1_TE_A2_TM_sampling_table <- data.frame(A1_TE = numeric(), A1_TE_A2 = numeric(), A1_TE_A2_TM = numeric())
# Initiate a loop for sampling
for (row in 1:1000) {
# Randomly sample desired number of rows from each of the 4 datasets
GSE63127_CS_NS_sample <- GSE63127_CS_NS %>%
sample_n(GSE63127_CS_NS_ngenes) %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUAD_DEG_sample <- TCGA_LUAD_DEG %>%
sample_n(TCGA_LUAD_DEG_ngenes) %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
GSE7895_persistent_DEGs_sample <- GSE7895_persistent_DEGs %>%
sample_n(GSE7895_persistent_DEGs_ngenes)
TCGA_LUAD_DMG_sample <- TCGA_LUAD_DMG %>%
sample_n(TCGA_LUAD_DMG_ngenes)%>%
filter(abs(log2FC)>log2FC_cutoff_TM) %>%
filter(FDR < FDR_cutoff_TM) %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
# Check the random overlaps between A1, TE with the sign filter
A1_TE_merged_DEGs_sample <- GSE63127_CS_NS_sample %>%
inner_join(., TCGA_LUAD_DEG_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
A1_TE_A2_TM_sampling_table[row,1] <- nrow(A1_TE_merged_DEGs_sample)
# Check the random overlaps with A2 with the sign filter
A1_TE_A2_genes_sample <- A1_TE_merged_DEGs_sample %>%
inner_join(., GSE7895_persistent_DEGs_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
A1_TE_A2_TM_sampling_table[row,2] <- nrow(A1_TE_A2_genes_sample)
# Check the random overlaps with TM with the sign filter
A1_TE_A2_TM_genes_sample <- A1_TE_A2_genes_sample %>%
dplyr::inner_join(., TCGA_LUAD_DMG_sample, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
A1_TE_A2_TM_sampling_table[row,3] <- nrow(A1_TE_A2_TM_genes_sample)
}
## So this is encouraging, there are never anywhere near as many genes overlapping as I found when the genes are randomly sampled by chance.
hist(A1_TE_A2_TM_sampling_table$A1_TE)
hist(A1_TE_A2_TM_sampling_table$A1_TE, breaks = 50)
hist(A1_TE_A2_TM_sampling_table$A1_TE, breaks = 100)
mean(A1_TE_A2_TM_sampling_table$A1_TE)
sd(A1_TE_A2_TM_sampling_table$A1_TE)
mean(A1_TE_A2_TM_sampling_table$A1_TE)
sd(A1_TE_A2_TM_sampling_table$A1_TE)
mean(A1_TE_A2_TM_sampling_table$A1_TE_A2)
sd(A1_TE_A2_TM_sampling_table$A1_TE_A2)
mean(A1_TE_A2_TM_sampling_table$A1_TE_A2_TM)
sd(A1_TE_A2_TM_sampling_table$A1_TE_A2_TM)
library(dplyr)
### Testing FDR and log2FC cutoffs ###
# A1 DEGs
FDR_cutoff_A1 = 0.01
log2FC_cutoff_A1 = 0.5
print(paste0("A1 DEGs meeting FDR cutoff ", FDR_cutoff_A1, " and log2FC cutoff ", log2FC_cutoff_A1))
nrow(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,])
hist(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,]$logFC, breaks = 100)
hist(log10(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,]$adj.P.Val), breaks = 100)
# TCGA-LUAD DEGs
FDR_cutoff_TE = 0.001
log2FC_cutoff_TE = 1
print(paste0("TE DEGs meeting FDR cutoff ", FDR_cutoff_TE, " and log2FC cutoff ", log2FC_cutoff_TE))
nrow(TCGA_LUAD_DEG[TCGA_LUAD_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_DEG$log2FC)>log2FC_cutoff_TE,])
hist(TCGA_LUAD_DEG[TCGA_LUAD_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_DEG$log2FC)>log2FC_cutoff_TE,]$log2FC, breaks = 100)
hist(log10(TCGA_LUAD_DEG[TCGA_LUAD_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_DEG$log2FC)>log2FC_cutoff_TE,]$FDR), breaks = 100)
# TCGA-LUAD DMGs limma
FDR_cutoff_TM = 0.01
log2FC_cutoff_TM = 0.5
print(paste0("TM DMGs meeting FDR cutoff ", FDR_cutoff_TM, " and log2FC cutoff ", log2FC_cutoff_TM))
nrow(TCGA_LUAD_DMG[TCGA_LUAD_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUAD_DMG$log2FC)>log2FC_cutoff_TM,])
hist(TCGA_LUAD_DMG[TCGA_LUAD_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUAD_DMG$log2FC)>log2FC_cutoff_TM,]$log2FC, breaks = 100)
hist(log10(TCGA_LUAD_DMG[TCGA_LUAD_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUAD_DMG$log2FC)>log2FC_cutoff_TM,]$FDR), breaks = 100)
GSE63127_CS_NS_cutoff <- GSE63127_CS_NS %>%
filter(abs(logFC)>log2FC_cutoff_A1) %>%
filter(adj.P.Val < FDR_cutoff_A1) %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUAD_DEG_cutoff <- TCGA_LUAD_DEG %>%
filter(abs(log2FC)>log2FC_cutoff_TE) %>%
filter(FDR < FDR_cutoff_TE) %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
TCGA_LUAD_DMG_cutoff <- TCGA_LUAD_DMG %>%
filter(abs(log2FC)>log2FC_cutoff_TM) %>%
filter(FDR < FDR_cutoff_TM) %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
## Merge the lists
A1_TE_merged_DEGs <- GSE63127_CS_NS_cutoff %>%
inner_join(., TCGA_LUAD_DEG_cutoff, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
nrow(A1_TE_merged_DEGs)
## Merge the lists
A1_TE_merged_DEGs <- GSE63127_CS_NS_cutoff %>%
inner_join(., TCGA_LUAD_DEG_cutoff, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
nrow(A1_TE_merged_DEGs)
## Merge the lists
A1_TE_A2_genes <- A1_TE_merged_DEGs %>%
inner_join(., GSE7895_persistent_DEGs, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
nrow(A1_TE_A2_genes)
# Save
#write.table(A1_TE_A2_genes, "../2_Outputs/6_Linked_genes/LUAD_CSFS_A1_TE_A2_genes.txt")
A1_TE_A2_TM_genes <- A1_TE_A2_linked_genes %>%
dplyr::inner_join(., TCGA_LUAD_DMG_cutoff, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
nrow(A1_TE_A2_TM_genes)
A1_TE_A2_TM_genes$Gene
write.table(A1_TE_A2_TM_genes, "../2_Outputs/6_Linked_genes/LUAD_CSFS_A1_TE_A2_TM_genes.txt")
A1_TE_A2_TM_genes <- A1_TE_A2_genes %>%
dplyr::inner_join(., TCGA_LUAD_DMG_cutoff, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
nrow(A1_TE_A2_TM_genes)
A1_TE_A2_TM_genes$Gene
write.table(A1_TE_A2_TM_genes, "../2_Outputs/6_Linked_genes/LUAD_CSFS_A1_TE_A2_TM_genes.txt")
library(dplyr)
### Testing FDR and log2FC cutoffs ###
# A1 DEGs
FDR_cutoff_A1 = 0.01
log2FC_cutoff_A1 = 0.25
print(paste0("A1 DEGs meeting FDR cutoff ", FDR_cutoff_A1, " and log2FC cutoff ", log2FC_cutoff_A1))
nrow(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,])
hist(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,]$logFC, breaks = 100)
hist(log10(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,]$adj.P.Val), breaks = 100)
# TCGA-LUAD DEGs
FDR_cutoff_TE = 0.001
log2FC_cutoff_TE = 1
print(paste0("TE DEGs meeting FDR cutoff ", FDR_cutoff_TE, " and log2FC cutoff ", log2FC_cutoff_TE))
nrow(TCGA_LUAD_DEG[TCGA_LUAD_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_DEG$log2FC)>log2FC_cutoff_TE,])
hist(TCGA_LUAD_DEG[TCGA_LUAD_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_DEG$log2FC)>log2FC_cutoff_TE,]$log2FC, breaks = 100)
hist(log10(TCGA_LUAD_DEG[TCGA_LUAD_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_DEG$log2FC)>log2FC_cutoff_TE,]$FDR), breaks = 100)
# TCGA-LUAD DMGs limma
FDR_cutoff_TM = 0.01
log2FC_cutoff_TM = 0.5
print(paste0("TM DMGs meeting FDR cutoff ", FDR_cutoff_TM, " and log2FC cutoff ", log2FC_cutoff_TM))
nrow(TCGA_LUAD_DMG[TCGA_LUAD_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUAD_DMG$log2FC)>log2FC_cutoff_TM,])
hist(TCGA_LUAD_DMG[TCGA_LUAD_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUAD_DMG$log2FC)>log2FC_cutoff_TM,]$log2FC, breaks = 100)
hist(log10(TCGA_LUAD_DMG[TCGA_LUAD_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUAD_DMG$log2FC)>log2FC_cutoff_TM,]$FDR), breaks = 100)
GSE63127_CS_NS_cutoff <- GSE63127_CS_NS %>%
filter(abs(logFC)>log2FC_cutoff_A1) %>%
filter(adj.P.Val < FDR_cutoff_A1) %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUAD_DEG_cutoff <- TCGA_LUAD_DEG %>%
filter(abs(log2FC)>log2FC_cutoff_TE) %>%
filter(FDR < FDR_cutoff_TE) %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
TCGA_LUAD_DMG_cutoff <- TCGA_LUAD_DMG %>%
filter(abs(log2FC)>log2FC_cutoff_TM) %>%
filter(FDR < FDR_cutoff_TM) %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
## Merge the lists
A1_TE_merged_DEGs <- GSE63127_CS_NS_cutoff %>%
inner_join(., TCGA_LUAD_DEG_cutoff, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
nrow(A1_TE_merged_DEGs)
## Merge the lists
A1_TE_A2_genes <- A1_TE_merged_DEGs %>%
inner_join(., GSE7895_persistent_DEGs, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
nrow(A1_TE_A2_genes)
# Save
#write.table(A1_TE_A2_genes, "../2_Outputs/6_Linked_genes/LUAD_CSFS_A1_TE_A2_genes.txt")
A1_TE_A2_TM_genes <- A1_TE_A2_genes %>%
dplyr::inner_join(., TCGA_LUAD_DMG_cutoff, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
nrow(A1_TE_A2_TM_genes)
A1_TE_A2_TM_genes$Gene
write.table(A1_TE_A2_TM_genes, "../2_Outputs/6_Linked_genes/LUAD_CSFS_A1_TE_A2_TM_genes.txt")
library(dplyr)
# Set the number of rows you want to sample
GSE63127_CS_NS_ngenes <- nrow(GSE63127_CS_NS_cutoff)
TCGA_LUAD_DEG_ngenes <- nrow(TCGA_LUAD_DEG_cutoff)
GSE7895_persistent_DEGs_ngenes <- nrow(GSE7895_persistent_DEGs) # no cutoff was applied here
TCGA_LUAD_DMG_ngenes <- nrow(TCGA_LUAD_DMG_cutoff)
# Make a dataframe to contain the results
A1_TE_A2_TM_sampling_table <- data.frame(A1_TE = numeric(), A1_TE_A2 = numeric(), A1_TE_A2_TM = numeric())
# Initiate a loop for sampling
for (row in 1:1000) {
# Randomly sample desired number of rows from each of the 4 datasets
GSE63127_CS_NS_sample <- GSE63127_CS_NS %>%
sample_n(GSE63127_CS_NS_ngenes) %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUAD_DEG_sample <- TCGA_LUAD_DEG %>%
sample_n(TCGA_LUAD_DEG_ngenes) %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
GSE7895_persistent_DEGs_sample <- GSE7895_persistent_DEGs %>%
sample_n(GSE7895_persistent_DEGs_ngenes)
TCGA_LUAD_DMG_sample <- TCGA_LUAD_DMG %>%
sample_n(TCGA_LUAD_DMG_ngenes)%>%
filter(abs(log2FC)>log2FC_cutoff_TM) %>%
filter(FDR < FDR_cutoff_TM) %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
# Check the random overlaps between A1, TE with the sign filter
A1_TE_merged_DEGs_sample <- GSE63127_CS_NS_sample %>%
inner_join(., TCGA_LUAD_DEG_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
A1_TE_A2_TM_sampling_table[row,1] <- nrow(A1_TE_merged_DEGs_sample)
# Check the random overlaps with A2 with the sign filter
A1_TE_A2_genes_sample <- A1_TE_merged_DEGs_sample %>%
inner_join(., GSE7895_persistent_DEGs_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
A1_TE_A2_TM_sampling_table[row,2] <- nrow(A1_TE_A2_genes_sample)
# Check the random overlaps with TM with the sign filter
A1_TE_A2_TM_genes_sample <- A1_TE_A2_genes_sample %>%
dplyr::inner_join(., TCGA_LUAD_DMG_sample, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
A1_TE_A2_TM_sampling_table[row,3] <- nrow(A1_TE_A2_TM_genes_sample)
}
hist(A1_TE_A2_TM_sampling_table$A1_TE, breaks = 100)
## So this is encouraging, there are never anywhere near as many genes overlapping as I found when the genes are randomly sampled by chance.
mean(A1_TE_A2_TM_sampling_table$A1_TE)
sd(A1_TE_A2_TM_sampling_table$A1_TE)
mean(A1_TE_A2_TM_sampling_table$A1_TE_A2)
sd(A1_TE_A2_TM_sampling_table$A1_TE_A2)
mean(A1_TE_A2_TM_sampling_table$A1_TE_A2_TM)
sd(A1_TE_A2_TM_sampling_table$A1_TE_A2_TM)
knitr::opts_chunk$set(echo = TRUE)
# A1
GSE63127_CS_NS              <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20241204.txt", header = TRUE)
# A1
GSE63127_CS_NS              <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt", header = TRUE)
# T-E
TCGA_LUSC_DEG               <- read.table("../2_Outputs/4_Tumor_DEGs/TCGA_LUSC_limma_DEG_CSFS_20250307.txt")
# T-M
TCGA_LUSC_DMG               <- read.table("../2_Outputs/5_Tumor_DMGs/TCGA_LUSC_limma_DMG_CSFS_20250307.txt")
# A1
GSE63127_CS_NS              <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt", header = TRUE)
# T-E
TCGA_LUSC_DEG               <- read.table("../2_Outputs/4_Tumor_DEGs/TCGA_LUSC_limma_DEG_CSFS_20250307.txt")
# T-M
TCGA_LUSC_DMG               <- read.table("../2_Outputs/5_Tumor_DMGs/TCGA_LUSC_limma_DMG_20250307.txt")
# A2
GSE7895_persistent_DEGs     <- read.table("../2_Outputs/1_Airway_DEGs/GSE7895_persistent_DEGs_20250307.txt")
# A1
GSE63127_CS_NS              <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt", header = TRUE)
# T-E
TCGA_LUSC_DEG               <- read.table("../2_Outputs/4_Tumor_DEGs/TCGA_LUSC_limma_DEG_CSFS_20250307.txt")
# T-M
TCGA_LUSC_DMG               <- read.table("../2_Outputs/5_Tumor_DMGs/TCGA_LUSC_limma_DMG_20250307.txt")
# A2
GSE7895_persistent_DEGs     <- read.table("../2_Outputs/1_Airway_DEGs/GSE7895_persistent_DEGs_quantile_20250307.txt")
library(dplyr)
### Testing FDR and log2FC cutoffs ###
# A1 DEGs
FDR_cutoff_A1 = 0.01
log2FC_cutoff_A1 = 0.25
print(paste0("A1 DEGs meeting FDR cutoff ", FDR_cutoff_A1, " and log2FC cutoff ", log2FC_cutoff_A1))
nrow(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,])
hist(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,]$logFC, breaks = 100)
hist(log10(GSE63127_CS_NS[GSE63127_CS_NS$adj.P.Val<FDR_cutoff_A1
& abs(GSE63127_CS_NS$logFC)>log2FC_cutoff_A1,]$adj.P.Val), breaks = 100)
# TCGA-LUSC DEGs
FDR_cutoff_TE = 0.001
log2FC_cutoff_TE = 1
print(paste0("TE DEGs meeting FDR cutoff ", FDR_cutoff_TE, " and log2FC cutoff ", log2FC_cutoff_TE))
nrow(TCGA_LUSC_DEG[TCGA_LUSC_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUSC_DEG$log2FC)>log2FC_cutoff_TE,])
hist(TCGA_LUSC_DEG[TCGA_LUSC_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUSC_DEG$log2FC)>log2FC_cutoff_TE,]$log2FC, breaks = 100)
hist(log10(TCGA_LUSC_DEG[TCGA_LUSC_DEG$FDR<FDR_cutoff_TE
& abs(TCGA_LUSC_DEG$log2FC)>log2FC_cutoff_TE,]$FDR), breaks = 100)
# TCGA-LUSC DMGs limma
FDR_cutoff_TM = 0.01
log2FC_cutoff_TM = 0.25
print(paste0("TM DMGs meeting FDR cutoff ", FDR_cutoff_TM, " and log2FC cutoff ", log2FC_cutoff_TM))
nrow(TCGA_LUSC_DMG[TCGA_LUSC_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUSC_DMG$log2FC)>log2FC_cutoff_TM,])
hist(TCGA_LUSC_DMG[TCGA_LUSC_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUSC_DMG$log2FC)>log2FC_cutoff_TM,]$log2FC, breaks = 100)
hist(log10(TCGA_LUSC_DMG[TCGA_LUSC_DMG$FDR<FDR_cutoff_TM
& abs(TCGA_LUSC_DMG$log2FC)>log2FC_cutoff_TM,]$FDR), breaks = 100)
GSE63127_CS_NS_cutoff <- GSE63127_CS_NS %>%
filter(abs(logFC)>log2FC_cutoff_A1) %>%
filter(adj.P.Val < FDR_cutoff_A1) %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUSC_DEG_cutoff <- TCGA_LUSC_DEG %>%
filter(abs(log2FC)>log2FC_cutoff_TE) %>%
filter(FDR < FDR_cutoff_TE) %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
TCGA_LUSC_DMG_cutoff <- TCGA_LUSC_DMG %>%
filter(abs(log2FC)>log2FC_cutoff_TM) %>%
filter(FDR < FDR_cutoff_TM) %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
## Merge the lists
A1_TE_merged_DEGs <- GSE63127_CS_NS_cutoff %>%
inner_join(., TCGA_LUSC_DEG_cutoff, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
print(c("overlap", nrow(A1_TE_merged_DEGs)))
## Fisher's exact test (In progress)
n1 <- nrow(A1_TE_merged_DEGs)
n2 <- nrow(TCGA_LUSC_DEG_cutoff)
n3 <- nrow(GSE63127_CS_NS_cutoff)
print(c("expected overlap ", n2*n3/20000))
fisher.test(matrix(c(n1, n3-n1, n2-n1, 20000-n3-n2+n1), nrow = 2) )
## Merge the lists
A1_TE_merged_DEGs <- GSE63127_CS_NS_cutoff %>%
inner_join(., TCGA_LUSC_DEG_cutoff, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
print(c("overlap", nrow(A1_TE_merged_DEGs)))
## Fisher's exact test (In progress)
# n1 <- nrow(A1_TE_merged_DEGs)
# n2 <- nrow(TCGA_LUSC_DEG_cutoff)
# n3 <- nrow(GSE63127_CS_NS_cutoff)
#
# print(c("expected overlap ", n2*n3/20000))
#
# fisher.test(matrix(c(n1, n3-n1, n2-n1, 20000-n3-n2+n1), nrow = 2) )
## Merge the lists
A1_TE_A2_linked_genes <- A1_TE_merged_DEGs %>%
inner_join(., GSE7895_persistent_DEGs, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
nrow(A1_TE_A2_linked_genes)
#write(A1_TE_TM_linked_genes$Gene, "../2_Outputs/6_Linked_genes/A1_TE_TM_linked_genes_20250221.txt", sep = "\n")
library(dplyr)
# Set the number of rows you want to sample
GSE63127_CS_NS_ngenes <- nrow(GSE63127_CS_NS_cutoff)
TCGA_LUSC_DEG_ngenes <- nrow(TCGA_LUSC_DEG_cutoff)
GSE7895_persistent_DEGs_ngenes <- nrow(GSE7895_persistent_DEGs) # no cutoff was applied here
TCGA_LUSC_DMG_ngenes <- nrow(TCGA_LUSC_DMG_cutoff)
# Make a dataframe to contain the results
A1_TE_A2_TM_sampling_table <- data.frame(A1_TE = numeric(), A1_TE_A2 = numeric(), A1_TE_A2_TM = numeric())
# Initiate a loop for sampling
for (row in 1:1000) {
# Randomly sample desired number of rows from each of the 4 datasets
GSE63127_CS_NS_sample <- GSE63127_CS_NS %>%
sample_n(GSE63127_CS_NS_ngenes) %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUSC_DEG_sample <- TCGA_LUSC_DEG %>%
sample_n(TCGA_LUSC_DEG_ngenes) %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
GSE7895_persistent_DEGs_sample <- GSE7895_persistent_DEGs %>%
sample_n(GSE7895_persistent_DEGs_ngenes)
TCGA_LUSC_DMG_sample <- TCGA_LUSC_DMG %>%
sample_n(TCGA_LUSC_DMG_ngenes)%>%
filter(abs(log2FC)>log2FC_cutoff_TM) %>%
filter(FDR < FDR_cutoff_TM) %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
# Check the random overlaps between A1, TE with the sign filter
A1_TE_merged_DEGs_sample <- GSE63127_CS_NS_sample %>%
inner_join(., TCGA_LUSC_DEG_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
A1_TE_A2_TM_sampling_table[row,1] <- nrow(A1_TE_merged_DEGs_sample)
# Check the random overlaps with A2 with the sign filter
A1_TE_A2_genes_sample <- A1_TE_merged_DEGs_sample %>%
inner_join(., GSE7895_persistent_DEGs_sample, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
A1_TE_A2_TM_sampling_table[row,2] <- nrow(A1_TE_A2_genes_sample)
# Check the random overlaps with TM with the sign filter
A1_TE_A2_TM_genes_sample <- A1_TE_A2_genes_sample %>%
dplyr::inner_join(., TCGA_LUSC_DMG_sample, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
A1_TE_A2_TM_sampling_table[row,3] <- nrow(A1_TE_A2_TM_genes_sample)
}
hist(A1_TE_A2_TM_sampling_table$A1_TE, breaks = 100)
## So this is encouraging, there are many more genes overlapping than I found when randomly sampling by chance.
mean(A1_TE_A2_TM_sampling_table$A1_TE)
sd(A1_TE_A2_TM_sampling_table$A1_TE)
mean(A1_TE_A2_TM_sampling_table$A1_TE_A2)
sd(A1_TE_A2_TM_sampling_table$A1_TE_A2)
mean(A1_TE_A2_TM_sampling_table$A1_TE_A2_TM)
sd(A1_TE_A2_TM_sampling_table$A1_TE_A2_TM)
A1_TE_A2_TM_methylation_linked_genes <- A1_TE_A2_linked_genes %>%
dplyr::inner_join(., TCGA_LUAD_DMG_cutoff, by = "Gene") %>%
dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
nrow(A1_TE_A2_TM_methylation_linked_genes)
A1_TE_A2_TM_methylation_linked_genes$Gene
knitr::opts_chunk$set(echo = TRUE)
## Reading in TCGA LUAD T vs NM DEGs for which I used limma and included all smoking statuses
TCGA_LUAD_limma_DEG_CSFSNS <- read.table("../2_Outputs/4_Tumor_DEGs/TCGA_LUAD_limma_DEG_CSFSNS_20250306.txt")
## Reading in the list from GEPIA, which used TCGA-LUAD paired T vs NM samples and for which I basically set no cutoff (0.01 log2FC cutoff and 0.5 FDR cutoff): obtained from  http://gepia2.cancer-pku.cn/#degenes
## Paper on GEPIA2: PMID is 31114875
GEPIA_LUAD_T_N_DEG <- read.table("../4_TCGA_data/GEPIA_LUAD_T_N_DEG.txt", header = T)
colnames(GEPIA_LUAD_T_N_DEG)[1] <- "Gene"
## Reading in the list from xenabrowser https://xenabrowser.net/ (I did this a looong time ago so might want to redo it):
xena_LUAD_T_N_DEG <- read.table("../4_TCGA_data/DGE_LUAD_TvsNM_limma_xena.txt", header = T)
colnames(xena_LUAD_T_N_DEG)[1] <- "Gene"
colnames(xena_LUAD_T_N_DEG)[2] <- "log2FC"
colnames(xena_LUAD_T_N_DEG)[6] <- "FDR"
## Reading in the list from publication PMID 26292924
PMID26292924_LUAD_LUSC_FDRs <- read.table("../4_TCGA_data/PMID26292924_LUAD_LUSC_FDRs.txt", header = T)
library(ggplot2)
#### Comparing number of rows with given cutoffs
### T-E
FDR_cutoff_TE = 0.001
log2FC_cutoff_TE = 1
TCGA_LUAD_limma_DEG_CSFSNS_filter <- TCGA_LUAD_limma_DEG_CSFSNS[TCGA_LUAD_limma_DEG_CSFSNS$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_limma_DEG_CSFSNS$log2FC)>log2FC_cutoff_TE,]
print(paste0("TE DEGs meeting FDR cutoff ", FDR_cutoff_TE, " and log2FC cutoff ", log2FC_cutoff_TE))
nrow(TCGA_LUAD_limma_DEG_CSFSNS_filter)
### GEPIA
FDR_cutoff_GEPIA = 0.001
log2FC_cutoff_GEPIA = 1
GEPIA_LUAD_T_N_DEG_filter <- GEPIA_LUAD_T_N_DEG[GEPIA_LUAD_T_N_DEG$FDR<FDR_cutoff_GEPIA
& abs(GEPIA_LUAD_T_N_DEG$log2FC)>log2FC_cutoff_GEPIA,]
print(paste0("GEPIA DEGs meeting FDR cutoff ", FDR_cutoff_GEPIA, " and log2FC cutoff ", log2FC_cutoff_GEPIA))
nrow(GEPIA_LUAD_T_N_DEG_filter)
### Venn diagram pre-filter
gene_sets <- euler(list(limma_LUAD = unique(TCGA_LUAD_limma_DEG_CSFSNS$Gene), GEPIA_LUAD = unique(GEPIA_LUAD_T_N_DEG$Gene)))
library(ggplot2)
library(eulerr)
#### Comparing number of rows with given cutoffs
### T-E
FDR_cutoff_TE = 0.001
log2FC_cutoff_TE = 1
TCGA_LUAD_limma_DEG_CSFSNS_filter <- TCGA_LUAD_limma_DEG_CSFSNS[TCGA_LUAD_limma_DEG_CSFSNS$FDR<FDR_cutoff_TE
& abs(TCGA_LUAD_limma_DEG_CSFSNS$log2FC)>log2FC_cutoff_TE,]
print(paste0("TE DEGs meeting FDR cutoff ", FDR_cutoff_TE, " and log2FC cutoff ", log2FC_cutoff_TE))
nrow(TCGA_LUAD_limma_DEG_CSFSNS_filter)
### GEPIA
FDR_cutoff_GEPIA = 0.001
log2FC_cutoff_GEPIA = 1
GEPIA_LUAD_T_N_DEG_filter <- GEPIA_LUAD_T_N_DEG[GEPIA_LUAD_T_N_DEG$FDR<FDR_cutoff_GEPIA
& abs(GEPIA_LUAD_T_N_DEG$log2FC)>log2FC_cutoff_GEPIA,]
print(paste0("GEPIA DEGs meeting FDR cutoff ", FDR_cutoff_GEPIA, " and log2FC cutoff ", log2FC_cutoff_GEPIA))
nrow(GEPIA_LUAD_T_N_DEG_filter)
### Venn diagram pre-filter
gene_sets <- euler(list(limma_LUAD = unique(TCGA_LUAD_limma_DEG_CSFSNS$Gene), GEPIA_LUAD = unique(GEPIA_LUAD_T_N_DEG$Gene)))
plot(main = "All genes",
gene_sets,
quantities = TRUE,  # Show counts in regions
fills = c("red", "blue", "green"),
alpha = 0.5,
edges = TRUE)
### Venn diagram post-filter
gene_sets <- euler(list(limma_LUAD = unique(TCGA_LUAD_limma_DEG_CSFSNS_filter$Gene), GEPIA_LUAD = unique(GEPIA_LUAD_T_N_DEG_filter$Gene)))
plot(main = "Filtered genes",
gene_sets,
quantities = TRUE,  # Show counts in regions
fills = c("red", "blue", "green"),
alpha = 0.5,
edges = TRUE)
## Combine the tables of TE and GEPIA
TE_GEPIA_comparison <- TCGA_LUAD_limma_DEG_CSFSNS %>%
inner_join(., GEPIA_LUAD_T_N_DEG, by = "Gene", suffix = c("_TE", "_GEPIA"))
## Make a version where all the cutoffs are met
TE_GEPIA_comparison_filtered <- TE_GEPIA_comparison %>%
filter(., abs(log2FC_TE) >= log2FC_cutoff_TE & abs(log2FC_GEPIA) >= log2FC_cutoff_GEPIA & FDR_TE <= FDR_cutoff_TE & FDR_GEPIA <= FDR_cutoff_GEPIA)
### Plot the log2FC values from both for all genes
ggplot(TE_GEPIA_comparison, aes(x = log2FC_TE, y = log2FC_GEPIA)) +
geom_point()
## Looks kinda correlated
### Plot the log2FC values for the genes meeting cutoffs
ggplot(TE_GEPIA_comparison_filtered, aes(x = log2FC_TE, y = log2FC_GEPIA)) +
geom_point() # Most of the signs are matching apart from a handful so that's good at least

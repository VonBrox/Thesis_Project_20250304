A1_exprs_means <-data.frame(Gene = A1_exprs_noblanks$Gene, mean_expr = rowMeans(as.matrix(A1_exprs_noblanks[,-1])))
A1_exprs_means$ID <- rownames(A1_exprs_means)
TE_exprs_noblanks <- TE_exprs[TE_exprs$Gene != "",]
TE_exprs_means <- data.frame(Gene = TE_exprs_noblanks$Gene, mean_expr = rowMeans(as.matrix(TE_exprs_noblanks[,-1])))
## Add the mean expression info to the DEGs lists
GSE63127_CS_NS_limma_mean <- inner_join(GSE63127_CS_NS_limma,A1_exprs_means, by = "ID" )
View(GSE63127_CS_NS_limma_mean )
View(TCGA_LUAD_limma_DEG_CSFS)
View(TE_exprs_means)
TCGA_LUAD_limma_DEG_CSFS  <- inner_join(TCGA_LUAD_limma_DEG_CSFS, TE_exprs_means, by = "ID")
TCGA_LUAD_limma_DEG_CSFS  <- inner_join(TCGA_LUAD_limma_DEG_CSFS, TE_exprs_means, by = "Gene")
GSE63127_CS_NS_limma$A1_TE <- ifelse(GSE63127_CS_NS_limma$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
View(GSE63127_CS_NS_limma)
TCGA_LUAD_limma_DEG_CSFS$A1_TE <- ifelse(TCGA_LUAD_limma_DEG_CSFS$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
library(ggplot2)
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = highlight)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "Other" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(GSE63127_CS_NS_limma, aes(x = log10(mean_expr + 1), y = logFC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
A1_exprs_noblanks <- A1_exprs[A1_exprs$Gene != "",]
A1_exprs_means <-data.frame(Gene = A1_exprs_noblanks$Gene, mean_expr = rowMeans(as.matrix(A1_exprs_noblanks[,-1])))
A1_exprs_means$ID <- rownames(A1_exprs_means)
TE_exprs_noblanks <- TE_exprs[TE_exprs$Gene != "",]
TE_exprs_means <- data.frame(Gene = TE_exprs_noblanks$Gene, mean_expr = rowMeans(as.matrix(TE_exprs_noblanks[,-1])))
## Add the mean expression info to the DEGs lists
GSE63127_CS_NS_limma <- inner_join(GSE63127_CS_NS_limma, A1_exprs_means, by = "ID" )
TCGA_LUAD_limma_DEG_CSFS  <- inner_join(TCGA_LUAD_limma_DEG_CSFS, TE_exprs_means, by = "Gene")
GSE63127_CS_NS_limma$A1_TE <- ifelse(GSE63127_CS_NS_limma$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
TCGA_LUAD_limma_DEG_CSFS$A1_TE <- ifelse(TCGA_LUAD_limma_DEG_CSFS$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
library(ggplot2)
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
# Read in the lists of DEGs for the A1 and TE individually
GSE63127_CS_NS_limma <- read.table("../../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt")
TCGA_LUAD_limma_DEG_CSFS <- read.table("../../2_Outputs/2_Tumor_DEGs/TCGA_LUAD_limma_DEG_CSFS_20250331.txt")
# Read in the lists of overlapping genes
A1_TE_merged_DEGs <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_25th_percentile_20250414.txt")
A1_TE_A2_linked_genes <- read.table( "../../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_25th_percentile_20250414.txt")
# Read in the expression data
## Read in the A1 normalized expression data
A1_exprs <- read.table("../../../Airway_expression/A1_exprs_20250403.txt", sep = " ")
## Read in the TE normalized expression data
TE_exprs <- read.table("../../../Tumor_expression/TE_data_20250408.txt", sep = " ")
A1_exprs_noblanks <- A1_exprs[A1_exprs$Gene != "",]
A1_exprs_means <-data.frame(Gene = A1_exprs_noblanks$Gene, mean_expr = rowMeans(as.matrix(A1_exprs_noblanks[,-1])))
A1_exprs_means$ID <- rownames(A1_exprs_means)
TE_exprs_noblanks <- TE_exprs[TE_exprs$Gene != "",]
TE_exprs_means <- data.frame(Gene = TE_exprs_noblanks$Gene, mean_expr = rowMeans(as.matrix(TE_exprs_noblanks[,-1])))
## Add the mean expression info to the DEGs lists
GSE63127_CS_NS_limma <- inner_join(GSE63127_CS_NS_limma, A1_exprs_means, by = "ID" )
TCGA_LUAD_limma_DEG_CSFS  <- inner_join(TCGA_LUAD_limma_DEG_CSFS, TE_exprs_means, by = "Gene")
GSE63127_CS_NS_limma$A1_TE <- ifelse(GSE63127_CS_NS_limma$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
TCGA_LUAD_limma_DEG_CSFS$A1_TE <- ifelse(TCGA_LUAD_limma_DEG_CSFS$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
library(ggplot2)
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(GSE63127_CS_NS_limma, aes(x = log10(mean_expr + 1), y = logFC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(GSE63127_CS_NS_limma, aes(x = log10(mean_expr + 1), y = logFC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for A1",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for TE, checking A1-TE genes",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for TE, checking A1-TE genes",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE_A2)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for TE, checking A1-TE_A2 genes",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
GSE63127_CS_NS_limma$A1_TE <- ifelse(GSE63127_CS_NS_limma$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
GSE63127_CS_NS_limma$A1_TE_A2 <- ifelse(GSE63127_CS_NS_limma$Gene %in% A1_TE_A2_linked_genes$Gene, "Yes", "No")
TCGA_LUAD_limma_DEG_CSFS$A1_TE <- ifelse(TCGA_LUAD_limma_DEG_CSFS$Gene %in% A1_TE_merged_DEGs$Gene, "Yes", "No")
TCGA_LUAD_limma_DEG_CSFS$A1_TE_A2 <- ifelse(TCGA_LUAD_limma_DEG_CSFS$Gene %in% A1_TE_A2_linked_genes$Gene, "Yes", "No")
library(ggplot2)
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for TE, checking A1-TE genes",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
ggplot(TCGA_LUAD_limma_DEG_CSFS, aes(x = log10(mean_expr + 1), y = log2FC, color = A1_TE_A2)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for TE, checking A1-TE_A2 genes",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
library(ggplot2)
ggplot(GSE63127_CS_NS_limma, aes(x = log10(mean_expr + 1), y = logFC, color = A1_TE)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for A1, checking A1-TE genes",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
ggplot(GSE63127_CS_NS_limma, aes(x = log10(mean_expr + 1), y = logFC, color = A1_TE_A2)) +
geom_point(alpha = 0.6, size = 1) +
scale_color_manual(values = c("Yes" = "blue", "No" = "grey")) +
theme_minimal() +
labs(
title = "MA Plot for A1, checking A1-TE-A2 genes",
x = "Log10(Mean Expression + 1)",
y = "Log2 Fold Change"
) +
theme(legend.title = element_blank())
??`getListElement,TransposedDataFrame-method`
nn
??getMeanSD
??metacont
??forest
forest()
# A1
GSE63127_CS_NS   <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt", header = TRUE)
# T-E
TCGA_LUAD_DEG   <- read.table("../2_Outputs/2_Tumor_DEGs/TCGA_LUAD_limma_DEG_CSFS_20250331.txt")
# T-M
TCGA_LUAD_DMG    <- read.table("../2_Outputs/3_Tumor_DMGs/TCGA_LUAD_limma_DMG_CSFS_20250307.txt")
# A2
GSE7895_persistent_DEGs   <- read.table("../2_Outputs/1_Airway_DEGs/GSE7895_persistent_DEGs_quantile_20250307.txt")
library(dplyr)
### First format them all the same way (this time not filtering for FDR)
GSE63127_CS_NS_formatted <- GSE63127_CS_NS %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUAD_DEG_formatted<- TCGA_LUAD_DEG %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
TCGA_LUAD_DMG_formatted <- TCGA_LUAD_DMG %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
### Then filter to shared gene symbols, but for now only between A1 and TE (TM is a later thing)
GSE63127_CS_NS_A1_TE_shared_genes <- GSE63127_CS_NS_formatted %>%
dplyr::filter(Gene %in% TCGA_LUAD_DEG$Gene)
nrow(GSE63127_CS_NS_A1_TE_shared_genes)
TCGA_LUAD_DEG_A1_TE_shared_genes <- TCGA_LUAD_DEG_formatted %>%
dplyr::filter(Gene %in% GSE63127_CS_NS$Gene)
nrow(TCGA_LUAD_DEG_A1_TE_shared_genes)
# Then filter to FDRs individually being <= 0.05
GSE63127_CS_NS_A1_TE_sig <- GSE63127_CS_NS_A1_TE_shared_genes %>%
filter(FDR_A1 <= 0.05)
nrow(GSE63127_CS_NS_A1_TE_sig)
TCGA_LUAD_DEG_A1_TE_sig <- TCGA_LUAD_DEG_A1_TE_shared_genes %>%
filter(FDR_TE <= 0.05)
nrow(TCGA_LUAD_DEG_A1_TE_sig)
### Then filter to FDR < 0.05 in both
GSE63127_A1_TE_sig_all <- GSE63127_CS_NS_A1_TE_sig %>%
filter(Gene %in% TCGA_LUAD_DEG_A1_TE_sig$Gene)
nrow(GSE63127_A1_TE_sig_all)
TCGA_LUAD_DEG_A1_TE_sig_all <- TCGA_LUAD_DEG_A1_TE_sig %>%
filter(Gene %in% GSE63127_CS_NS_A1_TE_sig$Gene)
nrow(TCGA_LUAD_DEG_A1_TE_sig_all)
### Then filter to 25% most up/downregulated genes based on log2FC
## A1
# Calculate percentile cutoffs
top_cutoff_A1 <- quantile(GSE63127_A1_TE_sig_all$log2FC_A1, 0.75, na.rm = TRUE)  # Top 12.5%
bottom_cutoff_A1 <- quantile(GSE63127_A1_TE_sig_all$log2FC_A1, 0.25, na.rm = TRUE)  # Bottom 12.5%
# Filter genes in the top and bottom 25% of log2FC
GSE63127_CS_NS_percentile <- GSE63127_A1_TE_sig_all %>%
filter(log2FC_A1 >= top_cutoff_A1 | log2FC_A1 <= bottom_cutoff_A1)
nrow(GSE63127_CS_NS_percentile)
###
## TE
# Calculate percentile cutoffs
top_cutoff_TE <- quantile(TCGA_LUAD_DEG_A1_TE_sig_all$log2FC_TE, 0.75, na.rm = TRUE)  # Top 12.5%
bottom_cutoff_TE <- quantile(TCGA_LUAD_DEG_A1_TE_sig_all$log2FC_TE, 0.25, na.rm = TRUE)  # Bottom 12.5%
# Filter genes in the top and bottom 25% of log2FC
TCGA_LUAD_DEG_percentile <- TCGA_LUAD_DEG_A1_TE_sig_all %>%
filter(log2FC_TE >= top_cutoff_TE | log2FC_TE <= bottom_cutoff_TE)
nrow(TCGA_LUAD_DEG_percentile)
library(dplyr)
### First format them all the same way (this time not filtering for FDR)
GSE63127_CS_NS_formatted <- GSE63127_CS_NS %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUAD_DEG_formatted<- TCGA_LUAD_DEG %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
TCGA_LUAD_DMG_formatted <- TCGA_LUAD_DMG %>%
dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
dplyr::select(., Gene, FDR_TM, log2FC_TM)
### Then filter to shared gene symbols, but for now only between A1 and TE (TM is a later thing)
GSE63127_CS_NS_A1_TE_shared_genes <- GSE63127_CS_NS_formatted %>%
dplyr::filter(Gene %in% TCGA_LUAD_DEG$Gene)
nrow(GSE63127_CS_NS_A1_TE_shared_genes)
TCGA_LUAD_DEG_A1_TE_shared_genes <- TCGA_LUAD_DEG_formatted %>%
dplyr::filter(Gene %in% GSE63127_CS_NS$Gene)
nrow(TCGA_LUAD_DEG_A1_TE_shared_genes)
# Then filter to FDRs individually being <= 0.05
GSE63127_CS_NS_A1_TE_sig <- GSE63127_CS_NS_A1_TE_shared_genes %>%
filter(FDR_A1 <= 0.05)
nrow(GSE63127_CS_NS_A1_TE_sig)
TCGA_LUAD_DEG_A1_TE_sig <- TCGA_LUAD_DEG_A1_TE_shared_genes %>%
filter(FDR_TE <= 0.05)
nrow(TCGA_LUAD_DEG_A1_TE_sig)
### Then filter to FDR < 0.05 in both
GSE63127_A1_TE_sig_all <- GSE63127_CS_NS_A1_TE_sig %>%
filter(Gene %in% TCGA_LUAD_DEG_A1_TE_sig$Gene)
nrow(GSE63127_A1_TE_sig_all)
TCGA_LUAD_DEG_A1_TE_sig_all <- TCGA_LUAD_DEG_A1_TE_sig %>%
filter(Gene %in% GSE63127_CS_NS_A1_TE_sig$Gene)
nrow(TCGA_LUAD_DEG_A1_TE_sig_all)
### Then filter to 25% most up/downregulated genes based on log2FC
## A1
# Calculate percentile cutoffs
top_cutoff_A1 <- quantile(GSE63127_A1_TE_sig_all$log2FC_A1, 0.875, na.rm = TRUE)  # Top 12.5%
bottom_cutoff_A1 <- quantile(GSE63127_A1_TE_sig_all$log2FC_A1, 0.125, na.rm = TRUE)  # Bottom 12.5%
# Filter genes in the top and bottom 25% of log2FC
GSE63127_CS_NS_percentile <- GSE63127_A1_TE_sig_all %>%
filter(log2FC_A1 >= top_cutoff_A1 | log2FC_A1 <= bottom_cutoff_A1)
nrow(GSE63127_CS_NS_percentile)
###
## TE
# Calculate percentile cutoffs
top_cutoff_TE <- quantile(TCGA_LUAD_DEG_A1_TE_sig_all$log2FC_TE, 0.875, na.rm = TRUE)  # Top 12.5%
bottom_cutoff_TE <- quantile(TCGA_LUAD_DEG_A1_TE_sig_all$log2FC_TE, 0.125, na.rm = TRUE)  # Bottom 12.5%
# Filter genes in the top and bottom 25% of log2FC
TCGA_LUAD_DEG_percentile <- TCGA_LUAD_DEG_A1_TE_sig_all %>%
filter(log2FC_TE >= top_cutoff_TE | log2FC_TE <= bottom_cutoff_TE)
nrow(TCGA_LUAD_DEG_percentile)
## Merge A1 and TE
A1_TE_merged_DEGs <- GSE63127_CS_NS_percentile %>%
inner_join(., TCGA_LUAD_DEG_percentile, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
nrow(A1_TE_merged_DEGs)
## Merge with A2
A1_TE_A2_linked_genes <- A1_TE_merged_DEGs %>%
inner_join(., GSE7895_persistent_DEGs, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
nrow(A1_TE_A2_linked_genes)
# Merge with TM (later consideration)
# A1_TE_A2_TM_methylation_linked_genes <- A1_TE_A2_linked_genes %>%
#   dplyr::inner_join(., TCGA_LUAD_DMG_sig_all, by = "Gene") %>%
#   dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
# nrow(A1_TE_A2_TM_methylation_linked_genes)
# A1_TE_A2_TM_methylation_linked_genes$Gene
## Save these outputs ##
# write.table(A1_TE_merged_DEGs, "../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_25th_percentile_20250414.txt")
# write.table(A1_TE_A2_linked_genes, "../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_25th_percentile_20250414.txt")
View(A1_TE_A2_linked_genes)
write.table(A1_TE_merged_DEGs, "../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_25th_percentile_LUAD_CSFS_20250422.txt")
write.table(A1_TE_A2_linked_genes, "../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_25th_percentile_LUSD_CSFS_20250414.txt")
knitr::opts_chunk$set(echo = TRUE)
# A1
GSE63127_CS_NS              <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt", header = TRUE)
# T-E
TCGA_LUSC_DEG               <- read.table("../2_Outputs/4_Tumor_DEGs/TCGA_LUSC_limma_DEG_CSFS_20250307.txt")
# A1
GSE63127_CS_NS              <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt", header = TRUE)
# T-E
TCGA_LUSC_DEG               <- read.table("../2_Outputs/4_Tumor_DEGs/TCGA_LUSC_limma_DEG_CSFS_20250307.txt")
# A1
GSE63127_CS_NS              <- read.table("../2_Outputs/1_Airway_DEGs/GSE63127_CS_NS_limma_20250307.txt", header = TRUE)
# T-E
TCGA_LUSC_DEG               <- read.table("../2_Outputs/2_Tumor_DEGs/TCGA_LUSC_limma_DEG_CSFS_20250307.txt")
# T-M
TCGA_LUSC_DMG               <- read.table("../2_Outputs/3_Tumor_DMGs/TCGA_LUSC_limma_DMG_20250307.txt")
# A2
GSE7895_persistent_DEGs     <- read.table("../2_Outputs/1_Airway_DEGs/GSE7895_persistent_DEGs_quantile_20250307.txt")
library(dplyr)
print("First format them all the same way (this time not filtering for FDR)")
GSE63127_CS_NS_formatted <- GSE63127_CS_NS %>%
dplyr::rename(., Gene = Gene.symbol, FDR_A1 = adj.P.Val, log2FC_A1 = logFC) %>%
dplyr::select(., Gene, FDR_A1, log2FC_A1)
TCGA_LUSC_DEG_formatted<- TCGA_LUSC_DEG %>%
dplyr::rename(., FDR_TE = FDR, log2FC_TE = log2FC, Gene = Gene) %>%
dplyr::select(., Gene, FDR_TE, log2FC_TE)
# TCGA_LUSC_DMG_formatted <- TCGA_LUSC_DMG %>%
#   dplyr::rename(., FDR_TM = FDR, log2FC_TM = log2FC) %>%
#   dplyr::select(., Gene, FDR_TM, log2FC_TM)
print("Then filter to shared gene symbols, but for now only between A1 and TE (TM is a later thing)")
GSE63127_CS_NS_A1_TE_shared_genes <- GSE63127_CS_NS_formatted %>%
dplyr::filter(Gene %in% TCGA_LUSC_DEG$Gene)
print("GSE63127_CS_NS_A1_TE_shared_genes:")
nrow(GSE63127_CS_NS_A1_TE_shared_genes)
TCGA_LUSC_DEG_A1_TE_shared_genes <- TCGA_LUSC_DEG_formatted %>%
dplyr::filter(Gene %in% GSE63127_CS_NS$Gene)
print("TCGA_LUSC_DEG_A1_TE_shared_genes:")
nrow(TCGA_LUSC_DEG_A1_TE_shared_genes)
print("Then filter to FDRs individually being <= 0.05")
GSE63127_CS_NS_A1_TE_sig <- GSE63127_CS_NS_A1_TE_shared_genes %>%
filter(FDR_A1 <= 0.05)
print("GSE63127_CS_NS_A1_TE_sig:")
nrow(GSE63127_CS_NS_A1_TE_sig)
TCGA_LUSC_DEG_A1_TE_sig <- TCGA_LUSC_DEG_A1_TE_shared_genes %>%
filter(FDR_TE <= 0.05)
print("TCGA_LUSC_DEG_A1_TE_sig:")
nrow(TCGA_LUSC_DEG_A1_TE_sig)
print("Then filter to FDR < 0.05 in both")
GSE63127_A1_TE_sig_all <- GSE63127_CS_NS_A1_TE_sig %>%
filter(Gene %in% TCGA_LUSC_DEG_A1_TE_sig$Gene)
print("GSE63127_A1_TE_sig_all:")
nrow(GSE63127_A1_TE_sig_all)
TCGA_LUSC_DEG_A1_TE_sig_all <- TCGA_LUSC_DEG_A1_TE_sig %>%
filter(Gene %in% GSE63127_CS_NS_A1_TE_sig$Gene)
print("TCGA_LUSC_DEG_A1_TE_sig_all:")
nrow(TCGA_LUSC_DEG_A1_TE_sig_all)
print("Then filter to n% most up/downregulated genes based on log2FC.")
percentile <- 75
print(paste0(percentile, " percentile"))
#A1:
# Calculate percentile cutoffs
top_cutoff_A1 <- quantile(GSE63127_A1_TE_sig_all$log2FC_A1, 0.5+percentile/100/2, na.rm = TRUE)
bottom_cutoff_A1 <- quantile(GSE63127_A1_TE_sig_all$log2FC_A1, 0.5-percentile/100/2, na.rm = TRUE)
# Filter genes in the top and bottom 25% of log2FC
GSE63127_CS_NS_percentile <- GSE63127_A1_TE_sig_all %>%
filter(log2FC_A1 >= top_cutoff_A1 | log2FC_A1 <= bottom_cutoff_A1)
print("GSE63127_CS_NS_percentile:")
nrow(GSE63127_CS_NS_percentile)
###
## TE
# Calculate percentile cutoffs
top_cutoff_TE <- quantile(TCGA_LUSC_DEG_A1_TE_sig_all$log2FC_TE,  0.5+percentile/100/2, na.rm = TRUE)  # Top n%
bottom_cutoff_TE <- quantile(TCGA_LUSC_DEG_A1_TE_sig_all$log2FC_TE, 0.5-percentile/100/2, na.rm = TRUE)  # Bottom n%
# Filter genes in the top and bottom 25% of log2FC
TCGA_LUSC_DEG_percentile <- TCGA_LUSC_DEG_A1_TE_sig_all %>%
filter(log2FC_TE >= top_cutoff_TE | log2FC_TE <= bottom_cutoff_TE)
print("TCGA_LUSC_DEG_percentile:")
nrow(TCGA_LUSC_DEG_percentile)
write.table(A1_TE_merged_DEGs, "../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS_20250422.txt")
write.table(A1_TE_A2_linked_genes, "../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS_20250414.txt")
## Merge A1 and TE
A1_TE_merged_DEGs <- GSE63127_CS_NS_percentile %>%
inner_join(., TCGA_LUSC_DEG_percentile, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(log2FC_TE)) # Filter to genes with same signs
print("A1_TE_merged_DEGs:")
nrow(A1_TE_merged_DEGs)
## Merge with A2
A1_TE_A2_linked_genes <- A1_TE_merged_DEGs %>%
inner_join(., GSE7895_persistent_DEGs, by = "Gene") %>%
filter(sign(log2FC_A1)==sign(CS_NS_A2)) # Filter to genes with same sign
print("A1_TE_A2_linked_genes:")
nrow(A1_TE_A2_linked_genes)
# Merge with TM (later consideration)
# A1_TE_A2_TM_methylation_linked_genes <- A1_TE_A2_linked_genes %>%
#   dplyr::inner_join(., TCGA_LUSC_DMG_sig_all, by = "Gene") %>%
#   dplyr::filter(sign(log2FC_A1) != sign(log2FC_TM)) # Ensure signs are opposite
# nrow(A1_TE_A2_TM_methylation_linked_genes)
# A1_TE_A2_TM_methylation_linked_genes$Gene
write.table(A1_TE_merged_DEGs, "../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS_20250422.txt")
write.table(A1_TE_A2_linked_genes, "../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS_20250414.txt")
A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS_20250422.txt")
View(A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS)
A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS <- read.table("A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS_20250414.txt")
A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS_20250422.txt")
A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS_20250414.txt")
# LUAD
A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS_20250422.txt")
A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS_20250414.txt")
# LUSC
A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS_20250422.txt")
A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS_20250414.txt")
View(A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS)
View(A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS)
View(A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS)
View(A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS)
# LUAD
A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS_20250422.txt")
A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS_20250414.txt")
# LUSC
A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS_20250422.txt")
A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS <- read.table("../../2_Outputs/4_Linked_genes/A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS_20250414.txt")
A1_TE_gene_sets <- euler(list(A1_TE_LUAD = unique(A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS$Gene), A1_TE_LUSC = unique(A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS$Gene)))
library(eulerr)
A1_TE_gene_sets <- euler(list(A1_TE_LUAD = unique(A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS$Gene), A1_TE_LUSC = unique(A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS$Gene)))
plot(main = "A1_TE genes",
A1_TE_gene_sets,
quantities = TRUE,  # Show counts in regions
fills = c("red", "blue", "green"),
alpha = 0.5,
edges = TRUE)
A1_TE_A2_gene_sets <- euler(list(A1_TE_A2_LUAD = unique(A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS$Gene), A1_TE_A2_LUSC = unique(A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS$Gene)))
plot(main = "A1_TE_A2 genes",
A1_TE_gene_sets,
quantities = TRUE,  # Show counts in regions
fills = c("red", "blue", "green"),
alpha = 0.5,
edges = TRUE)
A1_TE_A2_gene_sets <- euler(list(A1_TE_A2_LUAD = unique(A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS$Gene), A1_TE_A2_LUSC = unique(A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS$Gene)))
plot(main = "A1_TE_A2 genes",
A1_TE_A2_gene_sets,
quantities = TRUE,  # Show counts in regions
fills = c("red", "blue", "green"),
alpha = 0.5,
edges = TRUE)
library(eulerr)
# A1_TE gene comparison between LUAD and LUSC
A1_TE_gene_sets <- euler(list(A1_TE_LUAD = unique(A1_TE_merged_DEGs_75th_percentile_LUAD_CSFS$Gene), A1_TE_LUSC = unique(A1_TE_merged_DEGs_75th_percentile_LUSC_CSFS$Gene)))
plot(main = "A1_TE genes",
A1_TE_gene_sets,
quantities = TRUE,  # Show counts in regions
fills = c("red", "blue", "green"),
alpha = 0.5,
edges = TRUE)
# A1_TE_A2 comparison between LUAD and LUSC
A1_TE_A2_gene_sets <- euler(list(A1_TE_A2_LUAD = unique(A1_TE_A2_linked_genes_75th_percentile_LUAD_CSFS$Gene), A1_TE_A2_LUSC = unique(A1_TE_A2_linked_genes_75th_percentile_LUSC_CSFS$Gene)))
plot(main = "A1_TE_A2 genes",
A1_TE_A2_gene_sets,
quantities = TRUE,  # Show counts in regions
fills = c("red", "blue", "green"),
alpha = 0.5,
edges = TRUE)
library(TCGAbiolinks)
library(SummarizedExperiment)
library(dplyr)
## Read in TCGA-LUSC clinical data
query_clinical <- GDCquery(
project = "TCGA-LUSC",
data.category = "Clinical",
data.type = "Clinical Supplement"
)
# Check the available files
query_clinical$results[[1]] %>% head()
## I see that some are not BCR XML files, so I will try to remove these
query_clinical$results[[1]] <- query_clinical$results[[1]] %>%
filter(data_format == "BCR XML")
## Download data
GDCdownload(query_clinical)
